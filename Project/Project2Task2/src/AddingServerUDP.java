/**
 * Author: Kaizhong Ying Andrew ID: kying
 * Last Modified: February 17, 2024
 *
 * Implements a UDP server that accumulates integers sent by clients, demonstrating UDP communication.
 * Listens on port 6789, adds received integers to a running sum, and returns the sum to the client.
 * Each transaction is logged to the console. Designed for educational purposes to illustrate server-side operations.
 */

import java.net.DatagramPacket;
import java.net.DatagramSocket;

public class AddingServerUDP {
    private static int sum = 0; // Holds the running sum.

    public static void main(String[] args) {
        System.out.println("Server started");
        try (DatagramSocket socket = new DatagramSocket(6789)) {
            while (true) {
                byte[] buffer = new byte[4]; // Assume 4 bytes for an int.
                DatagramPacket request = new DatagramPacket(buffer, buffer.length);
                socket.receive(request); // Receive packet from client.

                int receivedValue = byteArrayToInt(buffer);
                sum = add(sum, receivedValue); // Use the add method to update the sum.

                System.out.printf("Adding: %d to %d\nReturning sum of %d to client\n\n",
                        receivedValue, sum - receivedValue, sum);

                byte[] replyBuffer = intToByteArray(sum);
                DatagramPacket reply = new DatagramPacket(replyBuffer, replyBuffer.length,
                        request.getAddress(), request.getPort());
                socket.send(reply); // Send the updated sum back to the client.
            }
        } catch (Exception e) {
            System.err.println("Error: " + e.getMessage());
        }
    }

    /**
     * Adds the given value to the current sum.
     *
     * @param currentSum The current sum before addition.
     * @param valueToAdd The value to add to the current sum.
     * @return The new sum after addition.
     */
    // the add, byteArrayToInt, intToByteArray three methods is generated by ChatGPT
    private static int add(int currentSum, int valueToAdd) {
        return currentSum + valueToAdd;
    }

    // Converts a byte array to an int.
    private static int byteArrayToInt(byte[] bytes) {
        return java.nio.ByteBuffer.wrap(bytes).getInt();
    }

    // Converts an int to a byte array.
    private static byte[] intToByteArray(int value) {
        return java.nio.ByteBuffer.allocate(4).putInt(value).array();
    }
}

